## WPI Project Files

- !File
  export: $project/.wpilib/wpilib_preferences.json
  source: ${exporter-path}wpilib_preferences.json
  update: None

- !File
  export: $project/BSD_License_for_WPILib_code.txt
  source: ${exporters-path}wpi/BSD_License_for_WPILib_code.txt
  update: None

- !File
  export: $project/.gitignore
  source: ${exporters-path}wpi/dot.gitignore
  update: None

## Gradle Files

- !File
  export: $project/build.gradle
  source: ${exporter-path}build.gradle
  update: None

- !File
  export: $project/settings.gradle
  source: ${exporters-path}gradle/settings.gradle
  update: None

- !File
  export: $project/gradlew
  source: ${exporters-path}gradle/scripts/gradlew
  update: None
  executable: true

- !File
  export: $project/gradlew.bat
  source: ${exporters-path}gradle/scripts/gradlew.bat
  update: None
  executable: true

- !File
  export: $project/gradle/wrapper/gradle-wrapper.properties
  source: ${exporters-path}gradle/wrapper/gradle-wrapper.properties
  update: None

- !File
  export: $project/gradle/wrapper/gradle-wrapper.jar
  source: ${exporters-path}gradle/wrapper/gradle-wrapper.notjar
  update: None

## VS Code Files

- !File
  export: $project/.vscode/launch.json
  source: ${exporters-path}vscode/launch.json
  update: None

- !File
  export: $project/.vscode/settings.json
  source: ${exporter-path}settings.json
  update: None
 
- !File
  export: $project/src/main/deploy/example.txt
  source: ${exporter-path}deploy_example.txt
  update: None
  
## Key C++ Files
- !File
  export: $project/src/main/cpp/Robot.cpp
  source: ${exporter-path}CommandBasedRobot.cpp
  update: Modify
  modifications:
    autonomous: ${exporter-path}CommandBasedRobot-autonomous.cpp
    constructors: ${exporter-path}CommandBasedRobot-constructors.cpp
    initialization: ${exporter-path}CommandBasedRobot-initialization.cpp
- !File
  export: $project/src/main/include/Robot.h
  source: ${exporter-path}CommandBasedRobot.h
  update: Modify
  modifications:
    includes: ${exporter-path}CommandBasedRobot-includes.h
    declarations: ${exporter-path}CommandBasedRobot-declarations.cpp

- !File
  export: $project/src/main/cpp/OI.cpp
  source: ${exporter-path}OI.cpp
  update: Modify
  modifications:
    includes: ${exporter-path}OI-includes.h
    constructors: ${exporter-path}OI-constructors.cpp
    functions: ${exporter-path}OI-functions.cpp
- !File
  export: $project/src/main/include/OI.h
  source: ${exporter-path}OI.h
  update: Modify
  modifications:
    declarations: ${exporter-path}OI-declarations.h
    prototypes: ${exporter-path}OI-prototypes.h

- !File
  export: $project/src/test/cpp/main.cpp
  source: ${exporter-path}main.cpp
  update: None

## Export Commands as files
#if ($export-commands)
#foreach ($command in $commands)
#if ($command.base.name == "Command Group")
- !File
  export: $project/src/main/cpp/Commands/#class($command.name).cpp
  source: ${exporter-path}CommandGroup.cpp
  update: None
  modifications:
    update: Modify
    constructor: ${exporter-path}CommandGroup-constructor.cpp
  variables:
    command-name: ${command.name}
- !File
  export: $project/src/main/include/Commands/#class($command.name).h
  source: ${exporter-path}CommandGroup.h
  update: Modify
  modifications:
    constructor: ${exporter-path}Command-constructor-header.h
  variables:
    command-name: ${command.name}
#elseif($command.base.name == "PID Command")
- !File
   export: $project/src/main/cpp/commands/#class($command.name).cpp
   source: ${exporter-path}PIDCommand.cpp
   update: Modify
   modifications:
     pid: ${exporter-path}PIDCommand-pid.cpp
     requires: ${exporter-path}Command-requires.cpp
     source: ${exporter-path}PIDCommand-source.cpp
     output: ${exporter-path}PIDCommand-output.cpp
     constructor: ${exporter-path}PIDCommand-constructor.cpp
   variables:
     command-name: ${command.name}
- !File
   export: $project/src/main/include/Commands/#class($command.name).h
   source: ${exporter-path}PIDCommand.h
   update: Modify
   modifications:
     constructor: ${exporter-path}Command-constructor-header.h
     variables: ${exporter-path}Command-constructor-variables.h
   variables:
     command-name: ${command.name}
#elseif($command.base.name == "Setpoint Command")
- !File
  export: $project/src/main/cpp/Commands/#class($command.name).cpp
  source: ${exporter-path}SetpointCommand.cpp
  update: Modify
  modifications:
    requires: ${exporter-path}Command-requires.cpp
    constructor: ${exporter-path}Command-constructor.cpp
    initialize: ${exporter-path}SetpointCommand-initialize.cpp
    isFinished: ${exporter-path}SetpointCommand-isFinished.cpp
  variables:
    command-name: ${command.name}
- !File
  export: $project/src/main/include/Commands/#class($command.name).h
  source: ${exporter-path}SetpointCommand.h
  modifications:
    constructor: ${exporter-path}Command-constructor-header.h
  update: Modify
  variables:
    command-name: ${command.name}
#elseif($command.base.name == "Timed Command")
- !File
  export: $project/src/main/cpp/Commands/#class($command.name).cpp
  source: ${exporter-path}TimedCommand.cpp
  update: Modify
  modifications:
    requires: ${exporter-path}Command-requires.cpp
    constructor: ${exporter-path}TimedCommand-constructor.cpp
  variables:
    command-name: ${command.name}
- !File
  export: $project/src/main/include/Commands/#class($command.name).h
  source: ${exporter-path}TimedCommand.h
  modifications:
    constructor: ${exporter-path}TimedCommand-constructor-header.h
  update: Modify
  variables:
    command-name: ${command.name}
#elseif($command.base.name == "Instant Command")
- !File
  export: $project/src/main/cpp/Commands/#class($command.name).cpp
  source: ${exporter-path}InstantCommand.cpp
  update: Modify
  modifications:
    requires: ${exporter-path}Command-requires.cpp
    constructor: ${exporter-path}InstantCommand-constructor.cpp
  variables:
    command-name: ${command.name}
- !File
  export: $project/src/main/include/Commands/#class($command.name).h
  modifications:
    constructor: ${exporter-path}Command-constructor-header.h
    variables: ${exporter-path}Command-constructor-variables.h
  source: ${exporter-path}InstantCommand.h
  update: Modify
  variables:
    command-name: ${command.name}
#elseif ($command.base.name == "Conditional Command")
- !File
  export: $project/src/main/cpp/Commands/#class($command.name).cpp
  source: ${exporter-path}ConditionalCommand.cpp
  update: Modify
  modifications:
    constructor: ${exporter-path}ConditionalCommand-constructor.cpp
  variables:
    command-name: ${command.name}
- !File
  export: $project/src/main/include/Commands/#class($command.name).h
  source: ${exporter-path}ConditionalCommand.h
  modifications:
    includes: ${exporter-path}ConditionalCommand-includes.h
    constructor: ${exporter-path}Command-constructor-header.h
  update: Modify  
  variables:
    command-name: ${command.name}
#else
- !File
  export: $project/src/main/cpp/Commands/#class($command.name).cpp
  source: ${exporter-path}Command.cpp
  update: Modify
  modifications:
    requires: ${exporter-path}Command-requires.cpp
    constructor: ${exporter-path}Command-constructor.cpp
  variables:
    command-name: ${command.name}
- !File
  export: $project/src/main/include/Commands/#class($command.name).h
  modifications:
    constructor: ${exporter-path}Command-constructor-header.h
    variables: ${exporter-path}Command-constructor-variables.h
  source: ${exporter-path}Command.h
  update: Modify
  variables:
    command-name: ${command.name}
#end
#end
#end

## Export Subsystems as files
#if ($export-subsystems)
#foreach ($subsystem in $subsystems)
#if ($subsystem.base.name == "PID Subsystem")
- !File
  export: $project/src/main/cpp/Subsystems/#class($subsystem.name).cpp
  source: ${exporter-path}PIDSubsystem.cpp
  update: Modify
  modifications:
    declarations: ${exporter-path}Subsystem-declarations.cpp
    default_command: ${exporter-path}Subsystem-default_command.cpp
    pid: ${exporter-path}PIDSubsystem-pid.cpp
    source: ${exporter-path}PIDSubsystem-source.cpp
    output: ${exporter-path}PIDSubsystem-output.cpp
    constants: ${exporter-path}Subsystem-constants.cpp
    cmdpidgetters: ${exporter-path}Subsystem-pidgetters.cpp
  variables:
    subsystem-name: ${subsystem.name}
- !File
  export: $project/src/main/include/Subsystems/#class($subsystem.name).h
  source: ${exporter-path}PIDSubsystem.h
  update: Modify
  modifications:
    declarations: ${exporter-path}Subsystem-declarations.h
    constants: ${exporter-path}Subsystem-constants.h
  variables:
    subsystem-name: ${subsystem.name}
#else
- !File
  export: $project/src/main/cpp/Subsystems/#class($subsystem.name).cpp
  source: ${exporter-path}Subsystem.cpp
  update: Modify
  modifications:
    declarations: ${exporter-path}Subsystem-declarations.cpp
    default_command: ${exporter-path}Subsystem-default_command.cpp
    constants: ${exporter-path}Subsystem-constants.cpp
    cmdpidgetters: ${exporter-path}Subsystem-pidgetters.cpp
  variables:
    subsystem-name: ${subsystem.name}
- !File
  export: $project/src/main/include/Subsystems/#class($subsystem.name).h
  source: ${exporter-path}Subsystem.h
  update: Modify
  modifications:
    declarations: ${exporter-path}Subsystem-declarations.h
    constants: ${exporter-path}Subsystem-constants.h
  variables:
    subsystem-name: ${subsystem.name}
#end
#end
#end
